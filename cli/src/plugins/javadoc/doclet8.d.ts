/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Doclet8Schema = ParsedClassDoc | ParsedPackageDoc;
export type ParsedClassDoc = Type &
  ProgramElementDoc & {
    _class: "ParsedClassDoc";
    isAbstract: boolean;
    isSerializable: boolean;
    isExternalizable: boolean;
    serializationMethods: MethodDoc[];
    serializableFields: FieldDoc[];
    definesSerializableFields: boolean;
    superclassType?: AnyType | null;
    interfaceTypes: AnyType[];
    typeParameters: AnyType[];
    typeParamTags: AnyTag[];
    fields: FieldDoc[];
    enumConstants: FieldDoc[];
    methods: MethodDoc[];
    constructors: ExecutableMemberDoc[];
    innerClasses: ClassDoc[];
    isAnnotationType: boolean;
    elements?: AnnotationTypeElementDoc[] | null;
    [k: string]: unknown;
  };
export type AnyType =
  | ParameterizedType
  | TypeVariable
  | WildcardType
  | AnnotatedType
  | ClassDoc
  | ParsedClassDoc
  | (Type & {
      _class?: "Type";
      [k: string]: unknown;
    });
export type ParameterizedType = Type & {
  _class: "ParameterizedType";
  typeArguments: AnyType[];
  superclassType?: AnyType | null;
  interfaceTypes: AnyType[];
  containingType?: AnyType | null;
  [k: string]: unknown;
};
export type TypeVariable = Type & {
  _class: "TypeVariable";
  bounds: AnyType[];
  annotations: AnnotationDesc[];
  [k: string]: unknown;
};
export type ClassDoc = Type & {
  _class: "ClassDoc";
  [k: string]: unknown;
};
export type AnyDoc =
  | AnnotationTypeElementDoc
  | ClassDoc
  | FieldDoc
  | PackageDoc
  | ParsedClassDoc
  | ParsedPackageDoc
  | (Doc & {
      _class?: "Doc";
      [k: string]: unknown;
    })
  | (ExecutableMemberDoc & {
      _class?: "ExecutableMemberDoc";
      [k: string]: unknown;
    })
  | (MemberDoc & {
      _class?: "MemberDoc";
      [k: string]: unknown;
    })
  | (MethodDoc & {
      _class?: "MethodDoc";
      [k: string]: unknown;
    })
  | (ProgramElementDoc & {
      _class?: "ProgramElementDoc";
      [k: string]: unknown;
    });
export type AnnotationTypeElementDoc = MethodDoc & {
  _class: "AnnotationTypeElementDoc";
  defaultValue?: string | null;
  [k: string]: unknown;
};
export type MethodDoc = ExecutableMemberDoc & {
  _class: "MethodDoc" | "AnnotationTypeElementDoc";
  isAbstract: boolean;
  isDefault: boolean;
  returnType: AnyType;
  overriddenType?: AnyType | null;
  overriddenMethodContainingClass?: ClassDoc | null;
  [k: string]: unknown;
};
export type ExecutableMemberDoc = MemberDoc & {
  _class: "ExecutableMemberDoc" | "MethodDoc" | "AnnotationTypeElementDoc";
  thrownExceptionTypes: AnyType[];
  isNative: boolean;
  isSynchronized: boolean;
  isVarArgs: boolean;
  parameters: Parameter[];
  receiverType?: AnyType | null;
  throwsTags: ThrowsTag[];
  paramTags: ParamTag[];
  typeParamTags: ParamTag[];
  signature: string;
  flatSignature: string;
  typeParameters: TypeVariable[];
  isConstructor: boolean;
  [k: string]: unknown;
};
export type MemberDoc = ProgramElementDoc & {
  _class:
    | "MemberDoc"
    | "ExecutableMemberDoc"
    | "MethodDoc"
    | "AnnotationTypeElementDoc"
    | "FieldDoc";
  isSynthetic: boolean;
  [k: string]: unknown;
};
export type ProgramElementDoc = Doc & {
  _class:
    | "ProgramElementDoc"
    | "ClassDoc"
    | "ParsedClassDoc"
    | "MemberDoc"
    | "ExecutableMemberDoc"
    | "MethodDoc"
    | "AnnotationTypeElementDoc"
    | "FieldDoc";
  containingClass?: ClassDoc | null;
  containingPackage: PackageDoc;
  qualifiedName: string;
  modifierSpecifier: number;
  modifiers: string;
  annotations: AnnotationDesc[];
  isPublic: boolean;
  isProtected: boolean;
  isPrivate: boolean;
  isPackagePrivate: boolean;
  isStatic: boolean;
  isFinal: boolean;
  [k: string]: unknown;
};
export type AnyTag =
  | ParamTag
  | SeeTag
  | SerialFieldTag
  | ThrowsTag
  | (Tag & {
      _class?: "Tag";
      [k: string]: unknown;
    });
export type ParamTag = Tag & {
  _class: "ParamTag";
  parameterName: string;
  parameterComment: string;
  isTypeParameter: boolean;
  [k: string]: unknown;
};
export type SeeTag = Tag & {
  _class: "SeeTag";
  label?: string | null;
  referencedPackage?: PackageDoc | null;
  referencedClassName?: string | null;
  referencedClass?: ClassDoc | null;
  referencedMemberName?: string | null;
  [k: string]: unknown;
};
export type SerialFieldTag = Tag & {
  _class: "SerialFieldTag";
  fieldName: string;
  fieldType: string;
  fieldTypeDoc?: ClassDoc | null;
  description: string;
  [k: string]: unknown;
};
export type ThrowsTag = Tag & {
  _class: "ThrowsTag";
  exceptionName: string;
  exceptionComment: string;
  exceptionType: AnyType;
  [k: string]: unknown;
};
export type FieldDoc = MemberDoc & {
  _class: "FieldDoc";
  type: AnyType;
  isTransient: boolean;
  isVolatile: boolean;
  serialFieldTags: SerialFieldTag[];
  constantValue?: string | null;
  constantValueExpression?: string | null;
  [k: string]: unknown;
};
export type AnnotationValue = string;
export type WildcardType = Type & {
  _class: "WildcardType";
  extendsBounds: AnyType[];
  superBounds: AnyType[];
  [k: string]: unknown;
};
export type AnnotatedType = Type & {
  _class: "AnnotatedType";
  annotations: AnnotationDesc[];
  underlyingType: AnyType;
  [k: string]: unknown;
};

export interface Type {
  _class:
    | "Type"
    | "ParameterizedType"
    | "TypeVariable"
    | "WildcardType"
    | "AnnotatedType"
    | "ClassDoc"
    | "ParsedClassDoc";
  asString: string;
  typeName: string;
  qualifiedTypeName: string;
  simpleTypeName: string;
  dimension: string;
  isPrimitive: boolean;
  elementType?: AnyType | null;
  isClass: boolean;
  isAnnotationType: boolean;
  [k: string]: unknown;
}
export interface AnnotationDesc {
  annotationType: ClassDoc;
  elementValues: {
    element: AnyDoc;
    value: AnnotationValue;
  }[];
  isSynthesized?: boolean;
}
export interface Doc {
  _class?:
    | "Doc"
    | "ProgramElementDoc"
    | "ClassDoc"
    | "ParsedClassDoc"
    | "PackageDoc"
    | "ParsedPackageDoc"
    | "MemberDoc"
    | "ExecutableMemberDoc"
    | "MethodDoc"
    | "AnnotationTypeElementDoc"
    | "FieldDoc";
  commentText: string;
  tags: AnyTag[];
  seeTags: SeeTag[];
  inlineTags: AnyTag[];
  firstSentenceTags: AnyTag[];
  name: string;
  isField: boolean;
  isEnumConstant: boolean;
  isConstructor: boolean;
  isMethod: boolean;
  isAnnotationTypeElement: boolean;
  isInterface: boolean;
  isException: boolean;
  isError: boolean;
  isEnum: boolean;
  isAnnotationType: boolean;
  isOrdinaryClass: boolean;
  isClass: boolean;
  isIncluded: boolean;
  position: SourcePosition;
  [k: string]: unknown;
}
export interface Tag {
  _class: "Tag" | "ParamTag" | "SeeTag" | "SerialFieldTag" | "ThrowsTag";
  name: string;
  kind: string;
  text: string;
  inlineTags?: AnyTag[];
  firstSentenceTags?: AnyTag[];
  [k: string]: unknown;
}
export interface PackageDoc {
  _class: "PackageDoc";
  name: string;
  [k: string]: unknown;
}
export interface SourcePosition {
  line: number;
  column: number;
  file: string;
}
export interface Parameter {
  type: AnyType;
  name: string;
  typeName: string;
  asString: string;
  annotations: AnnotationDesc[];
}
export interface ParsedPackageDoc {
  _class: "ParsedPackageDoc";
  allClasses: ClassDoc[];
  ordinaryClasses: ClassDoc[];
  exceptions: ClassDoc[];
  errors: ClassDoc[];
  enums: ClassDoc[];
  interfaces: ClassDoc[];
  annotationTypes: ClassDoc[];
  annotations: AnnotationDesc[];
  [k: string]: unknown;
}
